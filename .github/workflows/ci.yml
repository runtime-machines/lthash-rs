name: CI # Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  ci:
    name: CI Pipeline
    runs-on: ubuntu-latest
    env:
      SQLX_VERSION: 0.6.2
      SQLX_FEATURES: "rustls, postgres"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/runtime-machines/wiki/blob/main/devops/gh_actions/webfactory_ssh-agent.md#how-to-add-a-new-external-private-dependency-to-a-repository-pipeline
      # - uses: webfactory/ssh-agent@v0.7.0
      #   with:
      #     ssh-private-key: |
      #       ${{ secrets.FIRST_KEY }}
      #       ${{ secrets.NEXT_KEY }}
      #       ${{ secrets.ANOTHER_KEY }}
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, clippy, llvm-tools-preview
      
      - name: Restore cached
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.cargo/
            ./.cargo/
            ./target/
          key: ${{ runner.os }}-cargo-lock${{ hashFiles('**Cargo.lock') }}:toml${{ hashFiles('**Cargo.toml') }}
      
      # Run Format and Docs checks (without SQLX)
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Check documentation
        env:
          RUSTDOCFLAGS: -D warnings
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --document-private-items --all-features --workspace --examples
      
      # Install grcov
      - name: Install grcov
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: >
            grcov

      # Run clippy
      - name: Clippy check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --workspace -- -D warnings
          
      # Run test
      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --workspace
        env: 
          ENVIRONMENT: local
          RUSTFLAGS: -C instrument-coverage

      - name: Save Cache
        id: cache-save
        uses: actions/cache/save@v3
        with:
          path: |
            ~/.cargo/
            ./.cargo/
            ./target/
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

      - name: grcov
        run: grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "*cargo*" -o ./lcov.info

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          fail_ci_if_error: true
